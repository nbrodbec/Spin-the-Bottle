{
	// Place your NHIE workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"New module": {
		"scope": "lua",
		"prefix": "newmod",
		"body": [
			"local ${1} = {}",
			"${1}.dependencies = {",
			"\tmodules = {},",
			"\tutilities = {},",
			"\tdataStructures = {},",
			"\tconstants = {}",
			"}",
			"local modules",
			"local utilities",
			"local dataStructures",
			"local constants",
			"\n---- Public Functions ----\n",
			"function ${1}.init(importedModules, importedUtilities, importedDataStructures, importedConstants)",
			"\tmodules = importedModules",
			"\tutilities = importedUtilities",
			"\tdataStructures = importedDataStructures",
			"\tconstants = importedConstants",
			"\t",
			"end\n",
			"return ${1}"
		],
	},

	"Fusion": {
		"scope": "lua",
		"prefix": "fusion",
		"body": [
			"local Fusion = require(ReplicatedStorage.Fusion)",
			"local New = Fusion.New",
			"local Children = Fusion.Children",
			"local OnEvent = Fusion.OnEvent",
			"local OnChange = Fusion.OnChange",
			"local State = Fusion.State",
			"local Computed = Fusion.Computed",
			"local Spring = Fusion.Spring"
		],
	},

	"Component": {
		"scope": "lua",
		"prefix": "newcomp",
		"body": [
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\n",
			"local Fusion = require(ReplicatedStorage.Fusion)",
			"local New = Fusion.New",
			"local Children = Fusion.Children",
			"local OnEvent = Fusion.OnEvent",
			"local OnChange = Fusion.OnChange",
			"local State = Fusion.State",
			"local Computed = Fusion.Computed",
			"local Spring = Fusion.Spring",
			"\n",
			"local function ${1}(props)",
			"\t${2}",
			"end",
			"\nreturn ${1}"
		],
	},

	"Story": {
		"scope": "lua",
		"prefix": "newstory",
		"body": [
			"local components = script.Parent.Parent\n",
			"return function(target)",
			"\t${1}",
			"\treturn function()\n\t\t",
			"\tend",
			"end",
		],
	},
}